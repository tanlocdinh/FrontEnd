{"ast":null,"code":"export const checkImage = file => {\n  let err = \"\";\n\n  if (!file) {\n    return err = \"File does not exist.\";\n  } //?1 mb\n\n\n  if (file.size > 1024 * 1024) {\n    return err = \"File size must be less than 1 Mb.\";\n  }\n\n  if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n    return err = \"Image must be jpeg or png.\";\n  }\n\n  return err;\n};\nexport const imageUpload = async images => {\n  let imgArr = [];\n\n  for (const item of images) {\n    const formData = new FormData();\n\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n\n    formData.append(\"upload_preset\", \"ADD VALUE HERE\");\n    formData.append(\"cloud_name\", \"ADD VALUE HERE\");\n    const res = await fetch(\"ADD CLOUDINARY IMAGE UPLOAD LINK HERE\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n  }\n\n  return imgArr;\n};","map":{"version":3,"sources":["/Users/locdinh/Desktop/2808-Assignment-Source/mern-social-media/client/src/utils/imageUpload.js"],"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","url","secure_url"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAChC,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAG,CAACD,IAAJ,EAAS;AACL,WAAOC,GAAG,GAAG,sBAAb;AACH,GAJ+B,CAKpC;;;AACI,MAAGD,IAAI,CAACE,IAAL,GAAY,OAAO,IAAtB,EAA2B;AACtB,WAAQD,GAAG,GAAG,mCAAd;AACJ;;AAED,MAAID,IAAI,CAACG,IAAL,KAAc,YAAd,IAA8BH,IAAI,CAACG,IAAL,KAAc,WAAhD,EAA6D;AAC3D,WAAQF,GAAG,GAAG,4BAAd;AACD;;AAED,SAAOA,GAAP;AACH,CAfM;AAiBP,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAP,IAAkB;AACzC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAI,MAAMC,IAAV,IAAkBF,MAAlB,EAAyB;AACrB,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,QAAGF,IAAI,CAACG,MAAR,EAAe;AACXF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAI,CAACG,MAA7B;AACH,KAFD,MAEK;AACDF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACH;;AAGDC,IAAAA,QAAQ,CAACG,MAAT,CAAgB,eAAhB,EAAiC,gBAAjC;AACAH,IAAAA,QAAQ,CAACG,MAAT,CAAgB,YAAhB,EAA8B,gBAA9B;AAEA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,IAAI,EAAEP;AAFuD,KAA1C,CAAvB;AAKA,UAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAY;AAAEC,MAAAA,SAAS,EAAEH,IAAI,CAACG,SAAlB;AAA6BC,MAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAvC,KAAZ;AAGH;;AACD,SAAOf,MAAP;AACH,CA1BM","sourcesContent":["export const checkImage = (file) => {\n    let err = \"\";\n    if(!file){\n        return err = \"File does not exist.\";\n    }\n//?1 mb\n    if(file.size > 1024 * 1024){\n         return (err = \"File size must be less than 1 Mb.\");\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n      return (err = \"Image must be jpeg or png.\");\n    }\n\n    return err;\n}\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData();\n\n        if(item.camera){\n            formData.append(\"file\", item.camera);\n        }else{\n            formData.append(\"file\", item);  \n        }\n\n        \n        formData.append(\"upload_preset\", \"ADD VALUE HERE\");\n        formData.append(\"cloud_name\", \"ADD VALUE HERE\");\n\n        const res = await fetch(\"ADD CLOUDINARY IMAGE UPLOAD LINK HERE\", {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        imgArr.push({ public_id: data.public_id, url: data.secure_url });\n        \n      \n    }\n    return imgArr;\n}"]},"metadata":{},"sourceType":"module"}