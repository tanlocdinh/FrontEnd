{"ast":null,"code":"var _jsxFileName = \"/Users/locdinh/Desktop/2808-Assignment-Source/mern-social-media/client/src/components/alert/Alert.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loading from \"./Loading\";\nimport Toast from \"./Toast\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = () => {\n  _s();\n\n  const {\n    alert\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [alert.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this), alert.error && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Error\",\n        body: alert.error\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), alert.success && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Success\",\n        body: alert.success\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alert, \"nkVCJCUp54Uw4abul0ck9OkzP00=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/locdinh/Desktop/2808-Assignment-Source/mern-social-media/client/src/components/alert/Alert.js"],"names":["React","useSelector","useDispatch","Loading","Toast","GLOBALTYPES","Alert","alert","state","dispatch","loading","error","title","body","type","ALERT","payload","success"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,iCAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,sBACE;AAAA,eACGK,KAAK,CAACG,OAAN,iBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADpB,EAGGH,KAAK,CAACI,KAAN,iBACC,QAAC,KAAD;AACE,MAAA,GAAG,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,IAAI,EAAEN,KAAK,CAACI;AAA9B,OADP;AAEE,MAAA,UAAU,EAAE,MAAMF,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAET,WAAW,CAACU,KAApB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAF5B;AAGE,MAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,YAJJ,EAWGT,KAAK,CAACU,OAAN,iBACC,QAAC,KAAD;AACE,MAAA,GAAG,EAAE;AAAEL,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,IAAI,EAAEN,KAAK,CAACU;AAAhC,OADP;AAEE,MAAA,UAAU,EAAE,MAAMR,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAET,WAAW,CAACU,KAApB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAF5B;AAGE,MAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBD;;GAAMV,K;UACcL,W,EACDC,W;;;KAFbI,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loading from \"./Loading\";\nimport Toast from \"./Toast\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\n\nconst Alert = () => {\n  const { alert } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      {alert.loading && <Loading />}\n\n      {alert.error && (\n        <Toast\n          msg={{ title: \"Error\", body: alert.error }}\n          handleShow={() => dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\n          bgColor=\"bg-danger\"\n        />\n      )}\n\n      {alert.success && (\n        <Toast\n          msg={{ title: \"Success\", body: alert.success }}\n          handleShow={() => dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\n          bgColor=\"bg-success\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}