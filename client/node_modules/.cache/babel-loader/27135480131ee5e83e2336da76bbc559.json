{"ast":null,"code":"import { GLOBALTYPES } from './globalTypes';\nimport { postDataAPI, deleteDataAPI, getDataAPI, patchDataAPI } from '../../utils/fetchData';\nexport const NOTIFY_TYPES = {\n  GET_NOTIFIES: \"GET_NOTIFIES\",\n  CREATE_NOTIFY: \"CREATE_NOTIFY\",\n  REMOVE_NOTIFY: \"REMOVE_NOTIFY\",\n  UPDATE_NOTIFY: \"UPDATE_NOTIFY\",\n  UPDATE_SOUND: \"UPDATE_SOUND\",\n  DELETE_ALL_NOTIFICATIONS: \"DELETE_ALL_NOTIFICATIONS\"\n};\nexport const createNotify = ({\n  msg,\n  auth,\n  socket\n}) => async dispatch => {\n  try {\n    const res = await postDataAPI(`notify`, msg, auth.token);\n    socket.emit('createNotify', { ...res.data.notify,\n      user: {\n        username: auth.user.username,\n        avatar: auth.user.avatar\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const removeNotify = ({\n  msg,\n  auth,\n  socket\n}) => async dispatch => {\n  try {\n    await deleteDataAPI(`notify/${msg.id}?url=${msg.url}`, auth.token);\n    socket.emit(\"removeNotify\", msg);\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getNotifies = token => async dispatch => {\n  try {\n    const res = await getDataAPI('notifies', token);\n    dispatch({\n      type: NOTIFY_TYPES.GET_NOTIFIES,\n      payload: res.data.notifies\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const isReadNotify = ({\n  msg,\n  auth\n}) => async dispatch => {\n  dispatch({\n    type: NOTIFY_TYPES.UPDATE_NOTIFY,\n    payload: { ...msg,\n      isRead: true\n    }\n  });\n\n  try {\n    await patchDataAPI(`isReadNotify/${msg._id}`, null, auth.token);\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteAllNotifies = token => async dispatch => {\n  dispatch({\n    type: NOTIFY_TYPES.DELETE_ALL_NOTIFICATIONS,\n    payload: []\n  });\n\n  try {\n    await deleteDataAPI(`deleteAllNotify`, token);\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/locdinh/Desktop/2808-Assignment-Source/mern-social-media/client/src/redux/actions/notifyAction.js"],"names":["GLOBALTYPES","postDataAPI","deleteDataAPI","getDataAPI","patchDataAPI","NOTIFY_TYPES","GET_NOTIFIES","CREATE_NOTIFY","REMOVE_NOTIFY","UPDATE_NOTIFY","UPDATE_SOUND","DELETE_ALL_NOTIFICATIONS","createNotify","msg","auth","socket","dispatch","res","token","emit","data","notify","user","username","avatar","err","type","ALERT","payload","error","response","removeNotify","id","url","getNotifies","notifies","isReadNotify","isRead","_id","deleteAllNotifies"],"mappings":"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","sourcesContent":["import { GLOBALTYPES } from './globalTypes';\r\nimport { postDataAPI, deleteDataAPI, getDataAPI, patchDataAPI } from '../../utils/fetchData';\r\n\r\nexport const NOTIFY_TYPES = {\r\n  GET_NOTIFIES: \"GET_NOTIFIES\",\r\n  CREATE_NOTIFY: \"CREATE_NOTIFY\",\r\n  REMOVE_NOTIFY: \"REMOVE_NOTIFY\",\r\n  UPDATE_NOTIFY: \"UPDATE_NOTIFY\",\r\n  UPDATE_SOUND: \"UPDATE_SOUND\",\r\n  DELETE_ALL_NOTIFICATIONS: \"DELETE_ALL_NOTIFICATIONS\",\r\n};\r\n\r\nexport const createNotify = ({msg, auth, socket }) => async (dispatch) => {\r\n\r\n    try {\r\n        const res = await postDataAPI(`notify`, msg, auth.token);\r\n        socket.emit('createNotify', {\r\n          ...res.data.notify,\r\n          user: {\r\n            username: auth.user.username,\r\n            avatar: auth.user.avatar,\r\n          }\r\n        });\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} })\r\n    }\r\n};\r\n\r\nexport const removeNotify = ({ msg, auth, socket }) => async (dispatch) => {\r\n  try {\r\n    await deleteDataAPI(`notify/${msg.id}?url=${msg.url}`, auth.token);\r\n    socket.emit(\"removeNotify\", msg);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: { error: err.response.data.msg },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getNotifies = (token) => async (dispatch) => {\r\n  try {\r\n    const res = await getDataAPI('notifies', token);\r\n    \r\n    dispatch({type: NOTIFY_TYPES.GET_NOTIFIES, payload: res.data.notifies});\r\n    \r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: { error: err.response.data.msg },\r\n    });\r\n  }\r\n};\r\n\r\nexport const isReadNotify = ({msg, auth}) => async (dispatch) => {\r\n\r\n  dispatch({type: NOTIFY_TYPES.UPDATE_NOTIFY, payload: {...msg, isRead: true} });\r\n\r\n  try {\r\n    await patchDataAPI(`isReadNotify/${msg._id}`,null, auth.token);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: { error: err.response.data.msg },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteAllNotifies = (token) => async (dispatch) => {\r\n  dispatch({ type: NOTIFY_TYPES.DELETE_ALL_NOTIFICATIONS, payload: [] });\r\n\r\n  try {\r\n    await deleteDataAPI(`deleteAllNotify`, token);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: { error: err.response.data.msg },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}