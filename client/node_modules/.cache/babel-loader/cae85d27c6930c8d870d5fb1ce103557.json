{"ast":null,"code":"var _jsxFileName = \"/Users/locdinh/Desktop/2808-Assignment-Source/mern-social-media/client/src/pages/post/[id].js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost } from '../../redux/actions/postAction';\nimport LoadIcon from '../../images/loading.gif';\nimport PostCard from \"../../components/PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  const {\n    auth,\n    detailPost\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPost({\n      detailPost,\n      id,\n      auth\n    }));\n\n    if (detailPost.length > 0) {\n      const newArr = detailPost.filter(post => post._id === id);\n      setPost(newArr);\n    }\n  }, [detailPost, dispatch, id, auth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [post.length === 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: LoadIcon,\n      alt: \"Loading...\",\n      className: \"d-block mx-auto my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), post.map(item => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: item\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"hHcwWkzPJNtmrK8qP9+BLEW8apg=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/locdinh/Desktop/2808-Assignment-Source/mern-social-media/client/src/pages/post/[id].js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","getPost","LoadIcon","PostCard","Post","id","post","setPost","auth","detailPost","state","dispatch","length","newArr","filter","_id","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAxB;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBT,WAAW,CAAEU,KAAD,IAAWA,KAAZ,CAAxC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACV,OAAO,CAAC;AAAEQ,MAAAA,UAAF;AAAcJ,MAAAA,EAAd;AAAkBG,MAAAA;AAAlB,KAAD,CAAR,CAAR;;AACA,QAAIC,UAAU,CAACG,MAAX,GAAoB,CAAxB,EAA2B;AACzB,YAAMC,MAAM,GAAGJ,UAAU,CAACK,MAAX,CAAmBR,IAAD,IAAUA,IAAI,CAACS,GAAL,KAAaV,EAAzC,CAAf;AACAE,MAAAA,OAAO,CAACM,MAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACJ,UAAD,EAAaE,QAAb,EAAuBN,EAAvB,EAA2BG,IAA3B,CANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eAEQF,IAAI,CAACM,MAAL,KAAgB,CAAhB,iBACA;AAAK,MAAA,GAAG,EAAEV,QAAV;AAAoB,MAAA,GAAG,EAAC,YAAxB;AAAqC,MAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHR,EAOQI,IAAI,CAACU,GAAL,CAASC,IAAI,iBACT,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB,OAA2BA,IAAI,CAACF,GAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BD;;GAAMX,I;UACaN,S,EAEcE,W,EACZD,W;;;KAJfK,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost } from '../../redux/actions/postAction';\nimport LoadIcon from '../../images/loading.gif';\nimport PostCard from \"../../components/PostCard\";\n\nconst Post = () => {\n    const { id } = useParams();\n    const [post, setPost] = useState([]);\n    const { auth, detailPost } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(getPost({ detailPost, id, auth }));\n      if (detailPost.length > 0) {\n        const newArr = detailPost.filter((post) => post._id === id);\n        setPost(newArr);\n      }\n    }, [detailPost, dispatch, id, auth]);\n\n    return (\n        <div className=\"posts\">\n            {\n                post.length === 0 &&\n                <img src={LoadIcon} alt=\"Loading...\" className=\"d-block mx-auto my-4\" />\n            }\n\n            {\n                post.map(item => (\n                    <PostCard post={item} key={item._id} />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}